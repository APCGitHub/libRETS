!include config.vc
!include version.mk

NMAKE = nmake /nologo

TYPE = static
THIRD_PARTY_LIBS = static

!if "$(TYPE)" == "static"
LINK_LIB_FLAG = /lib
LIB_PREFIX = lib
LIB_EXT = lib
OBJDIR_TYPE = -static
!else if "$(TYPE)" == "dynamic"
LINK_LIB_FLAG = /dll
LIB_PREFIX = 
LIB_EXT = dll
OBJDIR_TYPE = -shared
!else
!error "Unknown TYPE: $(TYPE)"
!endif

!if "$(BUILD)" == "release"
OPTIMIZE_FLAG = /O2
RTC_FLAG =
OBJDIR_BUILD = release
LINK_DEBUG_FLAG =

DEBUG_RUNTIME = 
LIB_DEBUG_RUNTIME = 
!else if "$(BUILD)" == "debug"
OPTIMIZE_FLAG = /Od
!if "$(VS_VERSION)" == "vs2003"
RTC_FLAG = /GZ
!else if "$(VS_VERSION)" == "vs2005"
RTC_FLAG = /RTC1
!else if "$(VS_VERSION)" == "vs2008"
RTC_FLAG = /RTC1
!endif
OBJDIR_BUILD = debug
LINK_DEBUG_FLAG = /DEBUG

DEBUG_RUNTIME = d
LIB_DEBUG_RUNTIME = d
!else
!error "Unknown BUILD: $(BUILD)"
!endif

!if "$(RUNTIME_LIBS)" == "dynamic"
RUNTIME_FLAGS = /MD$(DEBUG_RUNTIME)
OBJDIR_RUNTIME = 
LIB_RUNTIME = 
!else if "$(RUNTIME_LIBS)" == "static"
RUNTIME_FLAGS = /MT$(DEBUG_RUNTIME)
OBJDIR_RUNTIME = -mt
LIB_RUNTIME = mt
!else
!error "Unknown RUNTIME_LIBS: $(RUNTIME_LIBS)"
!endif

BUILD_DIR = build
DIROBJ = $(BUILD_DIR)\$(OBJDIR_BUILD)$(OBJDIR_TYPE)$(OBJDIR_RUNTIME)

CC = cl.exe
CXX = cl.exe
!if "$(VS_VERSION)" == "vs2003"
CFLAGS_STD = /nologo $(RUNTIME_FLAGS) $(OPTIMIZE_FLAG) /Gm /Zi \
	$(RTC_FLAG) /I. \
	/W3 /GX /YX /GR /c

VC_VERSION = -vc71
!else if "$(VS_VERSION)" == "vs2005"
CFLAGS_STD = /nologo $(RUNTIME_FLAGS) $(OPTIMIZE_FLAG) /Gm /Zi \
	$(RTC_FLAG) /I. \
	/W3 /EHsc /GR /c

VC_VERSION = -vc80
!else if "$(VS_VERSION)" == "vs2008"
CFLAGS_STD = /nologo $(RUNTIME_FLAGS) $(OPTIMIZE_FLAG) /Gm /Zi \
	$(RTC_FLAG) /I. \
	/W3 /EHsc /GR /c

VC_VERSION = -vc90
!endif

CSC = csc.exe /nologo
LINK_LIB = link.exe $(LINK_LIB_FLAG) /nologo 
LINK_EXE = link.exe /nologo 

!if "$(VS_VERSION)" == "vs2003"
WINLIBS = wsock32.lib winmm.lib wldap32.lib user32.lib gdi32.lib advapi32.lib
!else if "$(VS_VERSION)" == "vs2005"
WINLIBS = wsock32.lib winmm.lib wldap32.lib bufferoverflowu.lib user32.lib gdi32.lib advapi32.lib
!else if "$(VS_VERSION)" == "vs2008"
WINLIBS = wsock32.lib winmm.lib wldap32.lib user32.lib gdi32.lib advapi32.lib
!endif

########################################################################
#
# Boost Configuration

BOOST_PATH = $(BASE_PATH)/boost

BOOST_RUNTIME_PREFIX = 

!if "$(BUILD)" == "release"
BOOST_DEBUG  = 
!else
BOOST_DEBUG = gd
BOOST_RUNTIME_PREFIX = -
!endif

!if "$(RUNTIME_LIBS)" == "static"
BOOST_STATIC = s
BOOST_RUNTIME_PREFIX = -
!else
BOOST_STATIC = 
!endif

!if "$(THIRD_PARTY_LIBS)" == "static"
BOOST_PREFIX = lib
!else
BOOST_PREFIX = 
!endif

BOOST_RUNTIME = $(BOOST_RUNTIME_PREFIX)$(BOOST_STATIC)$(BOOST_DEBUG)

BOOST_FILESYSTEM_LIB = $(BOOST_PREFIX)boost_filesystem$(VC_VERSION)-mt$(BOOST_RUNTIME).lib
BOOST_PROGRAM_OPTIONS_LIB = $(BOOST_PREFIX)boost_program_options$(VC_VERSION)-mt-$(BOOST_RUNTIME).lib
BOOST_SYSTEM_LIB = $(BOOST_PREFIX)boost_system$(VC_VERSION)-mt$(BOOST_RUNTIME).lib
!if "$(VS_VERSION)" == "vs2003"
BOOST_SYSTEM_LIB = 
!endif

BOOST_CFLAGS = /I "$(BOOST_PATH)" /DBOOST_DISABLE_ASSERTS
BOOST_LDFLAGS = "/LIBPATH:$(BOOST_PATH)/stage/lib"
!if "$(VS_VERSION)" == "vs2008"
BOOST_CFLAGS = /I "$(BASE_PATH)/include" /DBOOST_DISABLE_ASSERTS
BOOST_LDFLAGS = "/LIBPATH:$(BASE_PATH)/lib"
!endif

########################################################################
#
# OpenSSL Configuration

OPENSSL_PATH = $(BASE_PATH)/openssl

OPENSSL_LDFLAGS = "/LIBPATH:$(OPENSSL_PATH)/out32" ssleay32.lib libeay32.lib gdi32.lib advapi32.lib user32.lib
#OPENSSL_LDFLAGS = "/LIBPATH:$(OPENSSL_PATH)/out32" ssleay32.lib libeay32.lib 
!if "$(VS_VERSION)" == "vs2008"
OPENSSL_LDFLAGS = "/LIBPATH:$(BASE_PATH)/lib" ssleay32.lib libeay32.lib 
!endif

########################################################################
#
# Curl Configuration

CURL_PATH  = $(BASE_PATH)/curl

CURL_STATIC = /DCURL_STATICLIB

!if "$(RUNTIME_LIBS)" == "dynamic"
CURL_RUNTIME = 
!else
CURL_RUNTIME = MT
!endif

!if "$(BUILD)" == "release"
CURL_DEBUG_RUNTIME = 
!else
CURL_DEBUG_RUNTIME = d
!endif

CURL_LIB = libcurl$(CURL_RUNTIME)$(CURL_DEBUG_RUNTIME).lib

CURL_CFLAGS = /I "$(CURL_PATH)/include" $(CURL_STATIC)
CURL_LDFLAGS = "/LIBPATH:$(CURL_PATH)/lib" $(CURL_LIB)

!if "$(VS_VERSION)" == "vs2008"
CURL_CFLAGS = /I "$(BASE_PATH)/include" $(CURL_STATIC)
CURL_LDFLAGS = "/LIBPATH:$(BASE_PATH)/lib" $(CURL_LIB)
!endif

#########################################################################
#
# Expat Configuration

EXPAT_PATH = $(BASE_PATH)/expat

!if "$(RUNTIME_LIBS)" == "dynamic"
EXPAT_RUNTIME =
!else
EXPAT_RUNTIME = MT
!endif

!if "$(BUILD)" == "release"
EXPAT_BIN_PREFIX = release
!else
EXPAT_BIN_PREFIX = debug
!endif

!if "$(THIRD_PARTY_LIBS)" == "static"
EXPAT_XML_STATIC = /DXML_STATIC
EXPAT_LIB_PREFIX = lib
!else if "$(THIRD_PARTY_LIBS)" == "dynamic"
EXPAT_XML_STATIC =
EXPAT_LIB_PREFIX = 
!endif

!if "$(VS_VERSION)" == "vs2003"
EXPAT_CFLAGS = /I "$(EXPAT_PATH)/lib" $(EXPAT_XML_STATIC)
EXPAT_LDFLAGS = "/LIBPATH:$(EXPAT_PATH)/lib/lib" \
	$(EXPAT_LIB_PREFIX)expat$(EXPAT_RUNTIME).lib

!else
EXPAT_CFLAGS = /I "$(BASE_PATH)/include" $(EXPAT_XML_STATIC)
EXPAT_LDFLAGS = "/LIBPATH:$(BASE_PATH)/lib/$(EXPAT_BIN_PREFIX)" \
	$(EXPAT_LIB_PREFIX)expat$(EXPAT_RUNTIME).lib
!endif
########################################################################
#
# ANTLR Configuration

ANTLR_PATH = $(BASE_PATH)/antlr/install
!if "$(VS_VERSION)" == "vs2008"
ANTLR_PATH = $(BASE_PATH)
!endif

!if "$(RUNTIME_LIBS)" == "dynamic"
ANTLR_RUNTIME = 
!else
ANTLR_RUNTIME = mt
!endif

!if "$(BUILD)" == "release"
ANTLR_DEBUG_RUNTIME = 
!else
ANTLR_DEBUG_RUNTIME = d
!endif

ANTLR = java -classpath $(ANTLR_PATH)/lib/antlr.jar antlr.Tool
ANTLR_CFLAGS = /I "$(ANTLR_PATH)/include"
ANTLR_LDFLAGS = "/LIBPATH:$(ANTLR_PATH)/lib" \
	antlr$(ANTLR_RUNTIME)$(ANTLR_DEBUG_RUNTIME).lib

########################################################################
#
# CppUnit Configuration

CPPUNIT_PATH = $(BASE_PATH)/cppunit
CPPUNIT_LIB = cppunit$(LIB_RUNTIME)$(LIB_DEBUG_RUNTIME).lib
CPPUNIT_CFLAGS = /I "$(CPPUNIT_PATH)/include"
CPPUNIT_LDFLAGS = "/LIBPATH:$(CPPUNIT_PATH)/lib" $(CPPUNIT_LIB)

!if "$(VS_VERSION)" == "vs2008"
CPPUNIT_CFLAGS = /I "$(BASE_PATH)/include"
CPPUNIT_LDFLAGS = "/LIBPATH:$(BASE_PATH)/lib" $(CPPUNIT_LIB)
!endif

########################################################################
#
# Swig Configuration

!if "$(SWIG_PATH)" == ""
SWIG_PATH = $(BASE_PATH)\swig
!endif
!if "$(VS_VERSION)" == "vs2008"
SWIG_PATH = $(BASE_PATH)\bin
!endif
!if "$(SWIG)" == ""
SWIG = $(SWIG_PATH)\swig.exe
!endif

########################################################################
#
# PHP Configuration

!if "$(PHP_PATH)" == ""
PHP_PATH = $(BASE_PATH)/php
!endif
!if "$(PHP_CFLAGS)" == ""
PHP_CFLAGS = /I$(PHP_PATH) /I$(PHP_PATH)/TSRM /I$(PHP_PATH)/Zend /I$(PHP_PATH)/main /DPHP_WIN32 /DWIN32 /DZEND_WIN32 /DZTS=1 /DZEND_DEBUG=0 
!endif
!if "$(PHPWIN_PATH)" == ""
PHPWIN_PATH = $(BASE_PATH)/phpwin
!endif
!if "$(PHP_LIBS)" == ""
PHP_LIBS = $(PHPWIN_PATH)/dev/php5ts.lib
!endif

