!include <../../build/Makefile.vc>

##############################################################

LIB_NAME = librets

ANTLR_DIR = $(DIROBJ)\antlr

TARGET 	= $(LIB_NAME).$(TARGET_SUFFIX)
CFLAGS  = $(CFLAGS_STD) /I../include /I$(ANTLR_DIR) $(BOOST_CFLAGS) \
	/DBOOST_ALL_NO_LIB $(CURL_CFLAGS) $(EXPAT_CFLAGS) $(ANTLR_CFLAGS)
LDFLAGS = $(LDFLAGS_STD) $(BOOST_LDFLAGS) $(BOOST_FILESYSTEM_LIB) \
	$(CURL_LDFLAGS) $(EXPAT_LDFLAGS) $(ANTLR_LDFLAGS)
LINK    = $(LINK_EXE) $(LINK_STD) $(LDFLAGS) /out:$(DIROBJ)\$(TARGET)

########################################################################
#


ANTLR_SRCS = \
	$(ANTLR_DIR)\RetsSqlLexer.hpp \
	$(ANTLR_DIR)\RetsSqlLexer.cpp \
	$(ANTLR_DIR)\RetsSqlParser.hpp \
	$(ANTLR_DIR)\RetsSqlParser.cpp \
	$(ANTLR_DIR)\DmqlTreeParser.hpp \
	$(ANTLR_DIR)\DmqlTreeParser.cpp \
	$(ANTLR_DIR)\GetObjectTreeParser.hpp \
	$(ANTL_DIR)\GetObjectTreeParser.cpp

ANTLR_OBJS = \
	$(DIROBJ)\RetsSqlLexer.obj \
	$(DIROBJ)\RetsSqlParser.obj \
	$(DIROBJ)\DmqlTreeParser.obj \
	$(DIROBJ)\GetObjectTreeParser.obj

!include <objects.vc>

X_OBJS = $(ANTLR_OBJS) $(X_OBJS)

all: $(TARGET)

$(TARGET): $(X_OBJS)
	$(LINK_LIB) /out:$(DIROBJ)\$(TARGET) /NODEFAULTLIB $(LINK_STD) $(LDFLAGS) $(X_OBJS)

$(X_OBJS): $(DIROBJ)

$(ANTLR_OBJS): $(ANTLR_SRCS)

$(ANTLR_SRCS): rets-sql.g dmql-tree.g get-object-tree.g $(ANTLR_DIR)
	$(ANTLR) -o $(ANTLR_DIR) rets-sql.g
	$(ANTLR) -o $(ANTLR_DIR) -glib rets-sql.g dmql-tree.g
	$(ANTLR) -o $(ANTLR_DIR) -glib rets-sql.g get-object-tree.g

$(BUILD_DIR):
	@if not exist "$(BUILD_DIR)" mkdir $(BUILD_DIR)

$(DIROBJ): $(BUILD_DIR)
	@if not exist "$(DIROBJ)" mkdir $(DIROBJ)

$(ANTLR_DIR): $(DIROBJ)
	@if not exist "$(ANTLR_DIR)" mkdir $(ANTLR_DIR)

clean:
	@-rmdir /q /s $(BUILD_DIR) 2> NUL
	@-erase /s vc*.pch 2> NUL

.SUFFIXES: .c .cpp .obj .res

{.\}.c{$(DIROBJ)\}.obj:
	$(CC) $(CFLAGS) /Fo"$@"  $<

{.\}.cpp{$(DIROBJ)\}.obj:
	$(CXX) $(CFLAGS) /Fo"$@"  $<

{$(ANTLR_DIR)\}.cpp{$(DIROBJ)\}.obj:
	$(CXX) $(CFLAGS) /Fo"$@"  $<
