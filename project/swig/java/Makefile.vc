!include <../../build/Makefile.vc>

LIBRETS_LIB = ../../librets/src/$(BUILD_DIR)/$(LIBRETS_LIB_NAME)

!include <generated.vc>
WRAP = 	librets_wrap.cpp

CFLAGS  = $(CFLAGS_STD) /I .. /I ../../librets/include $(BOOST_CFLAGS) $(CURL_CFLAGS) \
		/I "$(JAVA_HOME_WIN)\include" /I "$(JAVA_HOME_WIN)\include\win32"
LDFLAGS = $(LDFLAGS_STD) $(LIBRETS_LIB) $(BOOST_LDFLAGS) 
LINK = $(LINK_EXE) $(LDFLAGS)

BIN_DIR = bin
GEN_DIR = generated
LIB_DIR = librets
LIBRETS_OBJ = $(BUILD_DIR)\librets_wrap.obj $(BUILD_DIR)\librets_bridge.obj
LIBRETS_DLL_FILE = librets.dll
LIBRETS_DLL = $(BUILD_DIR)\$(BIN_DIR)\$(LIBRETS_DLL_FILE)
LIBRETS_JAR_FILE = librets.jar
LIBRETS_JAR = $(BUILD_DIR)\$(BIN_DIR)\$(LIBRETS_JAR_FILE)
LIBRETS_SRC = $(GENERATED_SRC) CppInputStream.cs
RM = rm -f

all: $(LIBRETS_DLL)  $(LIBRETS_JAR)

$(LIBRETS_DLL): $(LIBRETS_OBJ) $(BUILD_DIR)/$(BIN_DIR) 
	$(LINK) /dll /out:$(LIBRETS_DLL) $(LIBRETS_OBJ) $(LIBRETS_LIB) $(WINLIBS)
        if exist $@.manifest mt -nologo -manifest $@.manifest -outputresource:$@;2

$(BUILD_DIR):
	@if not exist "$(BUILD_DIR)" mkdir $(BUILD_DIR)

$(BUILD_DIR)/$(BIN_DIR): $(BUILD_DIR)
	@if not exist "$(BUILD_DIR)\$(BIN_DIR)" mkdir $(BUILD_DIR)\$(BIN_DIR)

$(GEN_DIR):
	@if not exist "$(GEN_DIR)" mkdir $(GEN_DIR)

$(LIB_DIR):
	@if not exist "$(LIB_DIR)" mkdir $(LIB_DIR)

# Use to generate generated.vc
win_files:
	perl ../../build/win_files.pl GENERATED_SRC '$(GEN_DIR)\*.java' > generated.vc

SWIG_JAVA = $(SWIG) -c++ -java -package librets -o librets_wrap.cpp \
	-I$(SWIG_LIBRARY)/java -I$(SWIG_LIBRARY) \
	-outdir $(GEN_DIR) \
	../librets.i

$(LIBRETS_JAR): $(GENERATED_SRC)
	javac -d . $(GENERATED_SRC)
	jar -cvf $(LIBRETS_JAR) librets
	
$(BUILD_DIR)/librets_bridge.obj: ../librets_bridge.cpp
	$(CXX) $(CFLAGS) /Fd"$(BUILD_DIR)\\" /Fo"$@" ../librets_bridge.cpp 

$(BUILD_DIR)/librets_wrap.obj: librets_wrap.cpp

librets_wrap.cpp: ../librets.i $(GEN_DIR) $(LIB_DIR) $(BUILD_DIR)/$(BIN_DIR)
	@-erase $(GEN_DIR)\*.java 2> NUL
	$(SWIG_JAVA)

clean:
	@-rmdir /q /s $(BUILD_DIR) 2> NUL
	@-rmdir /q /s $(GEN_DIR) 2> NUL
	@-rmdir /q /s $(LIB_DIR) 2> NUL
	@-erase /q vc*.pch 2> NUL
	@-erase /q vc*.idb 2> NUL
	@-erase /q vc*.pdb 2> NUL
	@-erase /q librets.* 2> NUL
	@-erase /q *.obj 2> NUL
	@-erase librets_wrap.* 2> NUL

distclean: clean
	$(RM) $(GENERATED_SRC) librets_wrap*

{.\}.cpp.obj:
	$(CXX) $(CFLAGS) /Fd"$(BUILD_DIR)\\" /Fo"$@"  $<
