!include <project/build/Makefile.vc>

all:
	cd project\librets\src
	$(NMAKE) /f Makefile.vc
	cd ..\..\examples\src
	$(NMAKE) /f Makefile.vc
	cd ..\..\..

clean:
	cd project\librets\src
	$(NMAKE) /f Makefile.vc clean
	cd ..\..\..
	cd project\examples\src
	$(NMAKE) /f Makefile.vc clean
	cd ..\..\..
	cd project\librets\test\src
	$(NMAKE) /f Makefile.vc clean
	cd ..\..\..\..
	cd project\swig
	$(NMAKE) /f Makefile.vc clean
	cd ..\..
	
	@-rmdir /q  /s build 2>NUL
	@-rmdir /q  /s dist 2>NUL

test:
	cd project\librets\test\src
	$(NMAKE) /f Makefile.vc
	cd ..\..\..\..
	project\librets\test\src\$(DIROBJ)\test.exe

DIST_BASE = librets-$(VERSION)
DISTDIR = build/$(DIST_BASE)
DIST_ZIP = dist/librets-win32-$(VERSION).zip
DOXYGEN = "C:\Program Files\doxygen\bin\doxygen.exe"
MKDIR_P = c:\cygwin\bin\mkdir.exe -p
RSYNC = rsync -a --exclude-from project/build/dist-win-exclude

prepare:
	@if not exist build\doc\api mkdir build\doc\api
	@if not exist dist mkdir dist
	@$(MKDIR_P) $(DISTDIR)
	@$(MKDIR_P) $(DISTDIR)/doc/api
	@$(MKDIR_P) $(DISTDIR)/lib
	@$(MKDIR_P) $(DISTDIR)/dotnet
	@$(MKDIR_P) $(DISTDIR)/ruby

docs: prepare
	rm -rf build/doc/api
	cp project\build\Doxyfile.in project\build\Doxyfile
	echo PROJECT_NUMBER=$(VERSION) >> project\build\Doxyfile
	$(DOXYGEN) project\build\Doxyfile

swig:
	cd project\swig
	$(NMAKE) /f Makefile.vc
	cd ..\..

lib-all-variants:
	cd project\librets\src
	$(NMAKE) /f Makefile.vc BUILD=release RUNTIME_LIBS=dynamic
	$(NMAKE) /f Makefile.vc BUILD=release RUNTIME_LIBS=static
	$(NMAKE) /f Makefile.vc BUILD=debug RUNTIME_LIBS=dynamic
	$(NMAKE) /f Makefile.vc BUILD=debug RUNTIME_LIBS=static
	cd ..\..\..
	cd project\swig
	$(NMAKE) /f Makefile.vc BUILD=release RUNTIME_LIBS=dynamic
	cd ..\..

dist: docs lib-all-variants _dist

_dist:
	$(RSYNC) --delete build/doc/api/html $(DISTDIR)/doc/api
	$(RSYNC) --delete project/librets/include $(DISTDIR)
	cp -u project/librets/src/build/*.lib $(DISTDIR)/lib
	cp -u project/swig/csharp/bin/*.dll $(DISTDIR)/dotnet
	cp -u project/swig/ruby/*.so $(DISTDIR)/ruby
	rm -f $(DIST_ZIP)
	cd build
	zip -rq ../$(DIST_ZIP) $(DIST_BASE)
	cd ..
